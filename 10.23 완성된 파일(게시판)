package com.bitcamp.java.board;

import java.util.Scanner;

/**
 * 
 * 콘솔환경. 게시판.
 * 게시글.[]
 * 	글번호, 글제목, 내용, 작성자
 *  [int] [String         ]
 * 사용자.[]
 *  번호, 이름, 아이디, 암호
 * 
 * 여러 함수들이 공통 사용할 변수들 ?
 * - 지역,전역,정적 변수들의 구분
 * 
 * @author 비트캠프
 *
 */
public class BoardMain {
	static Scanner kb;
	static boolean loggin = false;
	static String userName = null;// NullPointException

	static Content[] board;
	static final int BOARDMAX = 10;// 최대길이
	static int bseq = 0;
	
	static User[] users;
	static final int USERMAX = 10;
	static int useq = 0;
	
	/**
	 * 실행 절차 : 키보드로 입력, 모니터 출력 (어디, 무엇)
	 * @param args
	 */
	public static void main(String[] args) {
		board = new Content[BOARDMAX];
		users = new User[USERMAX];
		kb = new Scanner(System.in);// 키보드 입력 값을 처리하는 라이브러리 사용
		System.out.println("start app");
		// 초기화
		final int UEXIT = 0;	// 시스템의 설정값
		int cmd = 0;			// 사용자의 입력값		
				
		while(true){
			// 게시글 목록
			list();
			System.out.println(
				"[1]write[2]view[3]join[4]login[5]logout[0]Exit"
			);
			// 선택(이벤트)에 따라 실행한다...
			cmd = kb.nextInt(); kb.nextLine();
			if( cmd == UEXIT) {	// 사용자가 종료를 선택했을 때
				break;
			}
			// 실행 결과 출력
			switch(cmd) {// 상수값 1개만, 변수 또는 식 불가
			case 1:
				// 글쓰기 . 로긴을 해야 한다...
				if( loggin ) {
					registContent(userName);
				}else {
					System.out.println("please login");
				}
				break;
			case 2:
				// 하나의 글을 선택해서 상세 보기 화면
				System.out.println("글번호 : ");
				int no = kb.nextInt();kb.nextLine();
				if( 0 <= no && no < bseq ) {
					viewContent(no);// 수정,삭제
				}else {
					System.out.println("invalid no");
				}
				break;
			case 3:
				join();
				break;
			case 4:
				System.out.println("ID : ");
				String id = kb.nextLine();
				System.out.println("PW : ");
				String pw = kb.nextLine();
				
				login(id,pw);
//				login();
				break;
			case 5:
				logout();
				break;
			default:
				System.out.println("1");
			}
			
			
		}// end loop
		
		// 해제,정리한다..		
		System.out.println("terminated app");
	}// main end

	private static void logout() {
		loggin = false;
		userName = null;
	}

	private static void login(String id, String pw) {
		// TODO: 전달받은 값이 일치하는지 확인
		loggin = false;
		// 가져오기
		for(User user : users ) {
			if( user != null ){
				// 비교 && ||
				if( user.id.equals(id) ) {
					if(user.pw.equals(pw)) {
						// success
						loggin = true;
						userName = user.name;
					}
				}
			}
		}
		
	}

	private static void join() {
		// TODO : 사용자 등록
		System.out.println("Name : ");
		String name = kb.nextLine();
		System.out.println("ID : ");
		String id = kb.nextLine();
		System.out.println("PW : ");
		String pw = kb.nextLine();
		
		// 등록 : users[] = 
		User user = new User();
		user.uid = useq+1;
		user.name = name;
		user.id = id;
		user.pw = pw;
		
		users[useq] = user; // 추가, 등록
		++useq;		

	}

	private static void viewContent(int no) {
		// TODO: 게시글 보기-수정,삭제
		// 가져오기
		Content content = board[no];
		// 출력하기
		String s = "["+content.cno+"] "+content.title;
		s += "\n:"+content.name;
		s += "\n" + content.text;
		
		System.out.println(s);
	}

	private static void registContent(String userName) {
		// TODO: 게시글 1개를 입력받아 저장(등록) 
		// 글번호 : 자동 증가
		System.out.println("Title : ");
		String title = kb.nextLine();
		System.out.println("Text : ");
		String text = kb.nextLine();
		// 등록
		Content content = new Content();
		content.cno = bseq+1;// <- up to you
		content.title = title;
		content.name = userName;
		content.text = text;

		if(board != null && bseq < board.length) {
			board[bseq] = content;
			++bseq;
		}
		
	}

	private static void list() {
		// TODO: 게시글 목록 출력. 번호,제목,작성자
		if(bseq == 0) {
			System.out.println("등록된 글이 없습니다.");
			return;
		}
		for(int i=0; i < board.length; ++i) {
			String str = "["+i+"]\t";
			str += board[i].title+"\t";
			str += board[i].name;
			System.out.println(str);
		}
	}

}
